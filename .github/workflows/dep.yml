name: Build, Push to ECR, and Deploy to Elastic Beanstalksss

on:
  push:
    branches:
      - main

jobs:
  build_push_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Run database migrations and create superuser
        run: |
          python manage.py migrate
          echo "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(username='${{ secrets.SUPERUSER_NAME }}').exists() or User.objects.create_superuser('${{ secrets.SUPERUSER_NAME }}', '${{ secrets.SUPERUSER_EMAIL }}', '${{ secrets.SUPERUSER_PASSWORD }}')" | python manage.py shell
        env:
          SUPERUSER_NAME: ${{ secrets.SUPERUSER_NAME }}
          SUPERUSER_EMAIL: ${{ secrets.SUPERUSER_EMAIL }}
          SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}

      - name: Build, tag, and push image to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 571888835380.dkr.ecr.us-east-1.amazonaws.com
          docker build -t python-repo .
          docker tag python-repo:latest 571888835380.dkr.ecr.us-east-1.amazonaws.com/python-repo:latest
          docker push 571888835380.dkr.ecr.us-east-1.amazonaws.com/python-repo:latest

    
